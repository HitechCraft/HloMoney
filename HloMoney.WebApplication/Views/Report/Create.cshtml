@model HloMoney.WebApplication.Models.ReportCreateViewModel
@{
    ViewBag.Title = "Оставить отзыв";
}

<h2 class="page-title">@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Report", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-md-6">
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title)
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", style = "max-width: 100%" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text)
                @Html.TextAreaFor(model => model.Text, new { @class = "form-control", style = "max-width: 100%; min-height: 230px" })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mark)
                <div class="report-mark">
                    <div class="report-mark-bg"></div>
                    <div class="report-mark-fill"></div>
                    <div class="clear"></div>
                </div>
                <input type="hidden" name="Mark" id="Mark" />
            </div>

            <div class="form-group">
                <input type="submit" value="Создать" class="btn btn-primary" />
                @Html.ActionLink("Отмена", "Index", "Home", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    @if(Model != null && Model.Mark > 0)
    {
        <text>window.reportMark = '@Model.Mark'.replace(',', '.');</text>
    }

    window.markSelected = false;
    window.markWidth = $('.report-mark-bg').width() / 5;

    $(function () {
        if (window.reportMark !== undefined) {
            $('.report-mark-fill').css('width', (parseFloat(window.reportMark) * window.markWidth) + "px");

            $('#Mark').val(parseFloat(Math.round(parseFloat(window.reportMark), -2)));
        }
    });

    $('.report-mark')
        .on('click',
            function () {
                window.markSelected = true;
                growlSuccess('Ваша оценка принята! Спасибо!');
            });

    $('.report-mark')
        .on('mousemove',
            function (e) {
                if (!window.markSelected) {
                    var parentOffset = $(this).parent().offset();

                    var relX = e.pageX - parentOffset.left;

                    $('.report-mark-fill').css('width', relX + "px");

                    $('#Mark').val((relX / window.markWidth).toFixed(1).replace('.', ','));
                }
            });

    $('.report-mark')
        .on('mouseleave',
            function () {
                window.markSelected = false;
            });
</script>